1. add new cron jobs.
2. address field in work_locations table
3. run this route
Route::get("/run",function() {

    // Find the user by email
    $specialReseller = User::where('email', 'kids20acc@gmail.com')->first();

    if ($specialReseller) {
        // Fetch the required permissions
        $permissions = Permission::whereIn('name', ['handle_self_registered_businesses'])->get();

        if ($permissions->isNotEmpty()) {
            // Assign the permissions to the user
            $specialReseller->givePermissionTo($permissions);
            echo "Permissions assigned successfully.";
        } else {
            echo "Permissions not found.";
        }
    } else {
        echo "User not found.";
    }
            return "ok";
        });

4. run 2 queries in db,
-- Step 1: Drop the existing foreign key constraint
ALTER TABLE `payrolls` DROP FOREIGN KEY `payrolls_payrun_id_foreign`;

-- Step 2: Add the new foreign key constraint with ON DELETE CASCADE
ALTER TABLE `payrolls`
ADD CONSTRAINT `payrolls_payrun_id_foreign` FOREIGN KEY (`payrun_id`) REFERENCES `payruns`(`id`) ON DELETE CASCADE;

5. emailer_logs table upload to db

6. ALTER TABLE `work_locations` ADD `latitude` VARCHAR(255) NULL DEFAULT NULL AFTER `updated_at`, ADD `longitude` VARCHAR(255) NULL DEFAULT NULL AFTER `latitude`, ADD `is_location_enabled` BOOLEAN NOT NULL AFTER `longitude`;


7. run 2 queries in db,
-- Step 1: Drop the existing foreign key constraint
ALTER TABLE `users` DROP FOREIGN KEY `users_designation_id_foreign`;
-- Step 2: Add the new foreign key constraint with ON DELETE CASCADE
ALTER TABLE `users`
ADD CONSTRAINT `users_designation_id_foreign` FOREIGN KEY (`designation_id`) REFERENCES `users`(`id`) ON DELETE set null;

8 insert table user_work_locations
9. run query
Route::get("/run",function() {


    $users = User::whereNotNull("work_location_id")->get();
    foreach($users as $user){
        UserWorkLocation::create([
            "user_id" => $user->id,
            "work_location_id" => $user->work_location_id
        ]);
    }
            return "ok";
        });






10. insert work_shift_locations table
11. ALTER TABLE `work_locations` ADD `is_geo_location_enabled` BOOLEAN NOT NULL AFTER `is_location_enabled`, ADD `is_ip_enabled` BOOLEAN NOT NULL AFTER `is_geo_location_enabled`, ADD `max_radius` DOUBLE NULL AFTER `is_ip_enabled`, ADD `ip_address` VARCHAR(255) NULL AFTER `max_radius`;


12. ALTER TABLE `holidays`
ADD `status` VARCHAR(100) NOT NULL DEFAULT 'pending_approval' AFTER `updated_at`;

UPDATE `holidays` SET `status` = 'approved' WHERE `status` IS NULL;


13. import attendance_projects  and attendance_history_projects











hr compliance 13 ->
